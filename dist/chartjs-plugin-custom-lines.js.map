{"version":3,"file":"chartjs-plugin-custom-lines.js","sources":["../src/drawCustomLines.js","../src/index.js"],"sourcesContent":["const errorChecking = (line) => {\n  if (!Object.prototype.hasOwnProperty.call(line, 'from')) {\n    throw new Error('The \\'from\\' property must be specified for each line');\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(line, 'to')) {\n    throw new Error('The \\'to\\' property must be specified for each line');\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(line.from, 'stackIndex')) {\n    throw new Error('The \\'stackIndex\\' property must be specified for the \\'from\\' property');\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(line.to, 'stackIndex')) {\n    throw new Error('The \\'stackIndex\\' property must be specified for the \\'to\\' property');\n  }\n};\n\nconst transformTopPoints = (datapointValues, top) => {\n  switch (top) {\n    case 'BR':\n      return {\n        ...datapointValues,\n        stackTRPos: datapointValues.stackBRPos,\n      };\n    case 'BL':\n      return {\n        ...datapointValues,\n        stackTLPos: datapointValues.stackBLPos,\n      };\n    case 'TR':\n      return {\n        ...datapointValues,\n        stackTLPos: datapointValues.stackTRPos,\n      };\n    case 'TL':\n      return {\n        ...datapointValues,\n        stackTRPos: datapointValues.stackTLPos,\n      };\n    default:\n      return datapointValues;\n  }\n};\n\nconst transformBottomPoints = (datapointValues, bottom) => {\n  switch (bottom) {\n    case 'BR':\n      return {\n        ...datapointValues,\n        stackBLPos: datapointValues.stackBRPos,\n      };\n    case 'BL':\n      return {\n        ...datapointValues,\n        stackBRPos: datapointValues.stackBLPos,\n      };\n    case 'TR':\n      return {\n        ...datapointValues,\n        stackBRPos: datapointValues.stackTRPos,\n      };\n    case 'TL':\n      return {\n        ...datapointValues,\n        stackBRPos: datapointValues.stackTLPos,\n      };\n    default:\n      return datapointValues;\n  }\n};\n\nconst transformPoints = (datapointValues, points = {}) => {\n  const transformedTopPoints = transformTopPoints(datapointValues, points.top);\n  const transformedPoints = transformBottomPoints(transformedTopPoints, points.bottom);\n\n  return transformedPoints;\n};\n\nconst drawCustomLine = (context, fromDatapointValues, toDatapointValues, line, options) => {\n  // Specific line options take priority over global if they are specified\n  const startColor = line.startColor || options.startColor;\n  const endColor = line.endColor || options.endColor;\n  const startColorStop = line.startColorStop || options.startColorStop;\n  const endColorStop = line.endColorStop || options.endColorStop;\n\n  let y0 = toDatapointValues.stackTLPos.y;\n  let y1 = toDatapointValues.stackBLPos.y;\n\n  if (line.reverseGradient) {\n    y0 = toDatapointValues.stackBLPos.y;\n    y1 = toDatapointValues.stackTLPos.y;\n  }\n\n  // Gradient from top of second box to bottom of second box\n  const gradient = context.createLinearGradient(0, y0, 0, y1);\n\n  gradient.addColorStop(startColorStop, startColor);\n  gradient.addColorStop(endColorStop, endColor);\n\n  context.fillStyle = gradient;\n\n  context.beginPath();\n\n  const fromTrasnformedDatapointValues = transformPoints(fromDatapointValues, line.from.points);\n  const toTrasnformedDatapointValues = transformPoints(toDatapointValues, line.to.points);\n\n  // top right of first box\n  context.lineTo(fromTrasnformedDatapointValues.stackTRPos.x, fromTrasnformedDatapointValues.stackTRPos.y);\n  // top left of second box\n  context.lineTo(toTrasnformedDatapointValues.stackTLPos.x, toTrasnformedDatapointValues.stackTLPos.y);\n  // bottom left of second box\n  context.lineTo(toTrasnformedDatapointValues.stackBLPos.x, toTrasnformedDatapointValues.stackBLPos.y);\n  // bottom right of first box\n  context.lineTo(fromTrasnformedDatapointValues.stackBRPos.x, fromTrasnformedDatapointValues.stackBRPos.y);\n\n  context.fill();\n};\n\nexport default (chart) => {\n  const context = chart.ctx;\n  const datasets = { ...chart.data.datasets };\n  const options = chart.options.plugins.customLinesPlugin;\n\n  if (!Object.prototype.hasOwnProperty.call(options, 'lines')) {\n    throw new Error('The \\'lines\\' property must be specified');\n  }\n\n  const getModel = (dataset) => {\n    const firstKey = Object.keys(dataset._meta)[0];\n\n    return dataset._meta[firstKey].data[0]._model;\n  };\n\n  const datapoints = Object.keys(datasets).map((key) => {\n    const dataset = datasets[key];\n    const model = getModel(dataset);\n\n    return {\n      stackBRPos: { x: model.x + (model.width / 2), y: model.base },\n      stackBLPos: { x: model.x - (model.width / 2), y: model.base },\n      stackTRPos: { x: model.x + (model.width / 2), y: model.y },\n      stackTLPos: { x: model.x - (model.width / 2), y: model.y },\n    };\n  });\n\n  options.lines.forEach((line) => {\n    errorChecking(line);\n\n    drawCustomLine(context, datapoints[line.from.stackIndex], datapoints[line.to.stackIndex], line, options);\n  });\n};\n","import merge from 'lodash/merge';\n\nimport drawCustomLines from './drawCustomLines';\n\nconst defaultOptions = {\n  customLinesPlugin: {\n    enabled: true,\n    startColorStop: 0,\n    endColorStop: 0.6,\n    startColor: 'rgba(0, 0, 0, 0.55)', // opaque\n    endColor: 'rgba(0, 0, 0, 0)', // transparent\n  },\n};\n\nconst status = {};\n\nconst waterFallPlugin = {\n  beforeInit: (chart) => {\n    status[chart.id] = {\n      readyToDrawCustomLines: false,\n    };\n  },\n  afterInit: (chart) => {\n    chart.options.plugins = merge({}, defaultOptions, chart.options.plugins);\n\n    // Can't override onComplete function because it gets overwridden if user using React\n    setTimeout(() => {\n      status[chart.id].readyToDrawCustomLines = true;\n      if (chart.ctx !== null) {\n        chart.draw();\n      }\n    }, chart.options.animation.duration);\n  },\n  afterDraw: (chart) => {\n    const options = chart.options.plugins.customLinesPlugin;\n\n    if (options.enabled &&\n        status[chart.id].readyToDrawCustomLines) {\n      drawCustomLines(chart);\n    }\n  },\n};\n\nexport default waterFallPlugin;\n"],"names":["transformPoints","datapointValues","points","bottom","stackBRPos","stackBLPos","stackTRPos","stackTLPos","transformBottomPoints","top","transformTopPoints","chart","context","ctx","datasets","data","options","plugins","customLinesPlugin","Object","prototype","hasOwnProperty","call","Error","datapoints","keys","map","key","model","dataset","firstKey","_meta","_model","getModel","x","width","y","base","lines","forEach","line","from","to","fromDatapointValues","toDatapointValues","startColor","endColor","startColorStop","endColorStop","y0","y1","reverseGradient","gradient","createLinearGradient","addColorStop","fillStyle","beginPath","fromTrasnformedDatapointValues","toTrasnformedDatapointValues","lineTo","fill","stackIndex","defaultOptions","status","id","merge","readyToDrawCustomLines","draw","animation","duration","enabled"],"mappings":"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"}